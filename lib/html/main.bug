(setq *self-closing-tag-names* 
  '(area base br col embed hr img input link meta param source track wbr))
(setq *use-indentation* t)
(setq *indentation-depth* 2)

(function attrsp (x)
  "Gets the attributes part of the element list.
    example: (div ((class \"test\"))) => ((class \"test\"))"
  (let ((attrs (cadr x)))
    (when (and attrs (list-of-lists? attrs))
      attrs)))

(function get-children (el)
  "Gets all the children of the element list.
    example: (div ((class \"test\")) (span \"hi\") \"content\") =>
             ((span \"hi\") \"content\")"
  (if (attrsp el)
    (cddr el)
    (cdr el)))

(function render-attr (attr)
  "Renders a single attribute.
    example: (id \"test\") => id=\"test\" "
  (string-concat (to-string (car attr)) "=" (string-quote (cadr attr))))

(function render-html (el)
  (do-render-html el 0))

(function do-render-html-recurse (child depth) 
  (do-render-html child depth))

(function do-render-html (el depth)
  "Converts a element list into a string."
  (if (string? el)
    el
    (let ((tag-name (car el))
          (attrs (attrsp el))
          (newline (string-concat "\n" (string-times "\t" 0))))

      (string-concat
        "<" (to-string tag-name) (if attrs " " "")

        (string-join (collect item (attrsp el) (render-attr item)) " ")
          ">"

        (if *use-indentation*
            (string-join (mapcar-with-carry (function (child d) (do-render-html child d)) (get-children el) (+ depth *indentation-depth*)) "\n")
            (apply 'string-concat rendered-children))

        (if (in (car el) *self-closing-tag-names*) ""
          (string-concat "</" (to-string tag-name) ">"))))))

(function write-html (path html)
  "Converts a element list into a string and writes the result to a file."
  (let ((file (open-file path "w+")))
    (impl:write-file file (render-html html))
    (close-file file)))

(function html5-template (title description head content)
  "Generates an empty HTML5 page as a element list."
  `(html ((lang "en"))
    (head
      (meta ((charset "utf-8")))
      (meta ((name "viewport") (content "width=device-width, initial-scale=1")))
      (title ,title)
      (meta ((description ,description)))
      (meta ((property "og:title") (content ,title)))
      (meta ((property "og:description") (content ,description)))

      (link ((rel "icon") (href "/favicon.ico"))))
      ,@head
      (body
        ,@content)))